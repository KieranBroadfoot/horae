{
    "apiVersion": "1.0",
    "swaggerVersion": "1.2",
    "basePath": "http://horae.kieranbroadfoot.com",
    "resourcePath": "/queues",
    "produces": [
        "application/json"
    ],
    "apis": [
        {
            "path": "/queues",
            "description": "The queues endpoint provides information regarding the available queues known to Horae. This will always include the \"default\" asynchronous queue.",
            "operations": [
                {
                    "httpMethod": "GET",
                    "nickname": "queues",
                    "type": "array",
                    "items": {
                        "$ref": "github.com.kieranbroadfoot.horae.types.Queue"
                    },
                    "summary": "The queues endpoint provides information regarding the available queues known to Horae. This will always include the \"default\" asynchronous queue.",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "tag",
                            "description": "Tag against which you wish to limit queues returned",
                            "dataType": "string",
                            "type": "string",
                            "format": "",
                            "allowMultiple": false,
                            "required": false,
                            "minimum": 0,
                            "maximum": 0
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "",
                            "responseModel": "github.com.kieranbroadfoot.horae.types.Queue"
                        },
                        {
                            "code": 400,
                            "message": "",
                            "responseModel": "github.com.kieranbroadfoot.horae.types.Error"
                        }
                    ],
                    "produces": [
                        "application/json"
                    ]
                }
            ]
        },
        {
            "path": "/queue/{uuid}",
            "description": "Provides details of the requested queue including availability windows, type, associated tags and paths.",
            "operations": [
                {
                    "httpMethod": "GET",
                    "nickname": "queryqueue",
                    "type": "github.com.kieranbroadfoot.horae.types.Queue",
                    "items": {},
                    "summary": "Provides details of the requested queue including availability windows, type, associated tags and paths.",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "uuid",
                            "description": "UUID of the requested queue",
                            "dataType": "string",
                            "type": "string",
                            "format": "",
                            "allowMultiple": false,
                            "required": false,
                            "minimum": 0,
                            "maximum": 0
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "",
                            "responseModel": "github.com.kieranbroadfoot.horae.types.Queue"
                        },
                        {
                            "code": 404,
                            "message": "Queue not found",
                            "responseModel": "github.com.kieranbroadfoot.horae.types.Error"
                        }
                    ],
                    "produces": [
                        "application/json"
                    ]
                },
                {
                    "httpMethod": "PUT",
                    "nickname": "updatequeue",
                    "type": "github.com.kieranbroadfoot.horae.types.Success",
                    "items": {},
                    "summary": "A queue may be updated via this endpoint.  The name, window of operation, and backpressure configuration.  If the window of operation is changed whilst it is active those tasks in-flight will continue but any others will be held back until the next window of operation.  Queues cannot change their \"type\" from sync to async or vice-versa.  You would need to delete and recreate because you would need to define the draining behaviour and existing tasks may not be aware of the need to callback on completion (when moving from async to sync).",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "uuid",
                            "description": "UUID for updated queue",
                            "dataType": "string",
                            "type": "string",
                            "format": "",
                            "allowMultiple": false,
                            "required": true,
                            "minimum": 0,
                            "maximum": 0
                        },
                        {
                            "paramType": "query",
                            "name": "queue",
                            "description": "A queue object",
                            "dataType": "github.com.kieranbroadfoot.horae.types.Queue",
                            "type": "github.com.kieranbroadfoot.horae.types.Queue",
                            "format": "",
                            "allowMultiple": false,
                            "required": true,
                            "minimum": 0,
                            "maximum": 0
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "",
                            "responseModel": "github.com.kieranbroadfoot.horae.types.Success"
                        },
                        {
                            "code": 400,
                            "message": "",
                            "responseModel": "github.com.kieranbroadfoot.horae.types.Error"
                        }
                    ],
                    "produces": [
                        "application/json"
                    ]
                },
                {
                    "httpMethod": "DELETE",
                    "nickname": "deletequeue",
                    "type": "github.com.kieranbroadfoot.horae.types.Success",
                    "items": {},
                    "summary": "When called a defined queue will either be immediately removed and all associated tasks deleted OR if requested the queue will be defined as \"drain-only\" which will delete the queue when it is empty.",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "uuid",
                            "description": "Tag against which you wish to limit queues returned",
                            "dataType": "string",
                            "type": "string",
                            "format": "",
                            "allowMultiple": false,
                            "required": true,
                            "minimum": 0,
                            "maximum": 0
                        },
                        {
                            "paramType": "query",
                            "name": "shouldDrain",
                            "description": "If empty to set to false the queue will be immediately deleted along with any associated tasks.  If set to true the queue will only be removed when the queue is empty.  No new tasks can be added to the queue once set.",
                            "dataType": "bool",
                            "type": "bool",
                            "format": "",
                            "allowMultiple": false,
                            "required": false,
                            "minimum": 0,
                            "maximum": 0
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "",
                            "responseModel": "github.com.kieranbroadfoot.horae.types.Success"
                        },
                        {
                            "code": 400,
                            "message": "",
                            "responseModel": "github.com.kieranbroadfoot.horae.types.Error"
                        }
                    ],
                    "produces": [
                        "application/json"
                    ]
                }
            ]
        },
        {
            "path": "/queue",
            "description": "This endpoint enables the creation of a new queue.  All queues must be defined with a unique name and window of operation and type.  Optionally you may also define a series of tags to help searching for a particular queue or queues.  The queue type is either \"sync\" or \"async\".  If defined as \"async\" then any tasks available in the queue will be executed in the next availability window.  However, sync queues will execute tasks in a FIFO manner during the availability window.  To enable this, tasks associated to the queue must execute a task completion call when finished to ensure Horae can continue execution.  Optionally sync queues may also define a backpressure URI, operation, payload AND definition.  If Horae starts to see the queue meet the backpressure definition the callback will be executed.",
            "operations": [
                {
                    "httpMethod": "PUT",
                    "nickname": "createqueue",
                    "type": "github.com.kieranbroadfoot.horae.types.Queue",
                    "items": {},
                    "summary": "This endpoint enables the creation of a new queue.  All queues must be defined with a unique name and window of operation and type.  Optionally you may also define a series of tags to help searching for a particular queue or queues.  The queue type is either \"sync\" or \"async\".  If defined as \"async\" then any tasks available in the queue will be executed in the next availability window.  However, sync queues will execute tasks in a FIFO manner during the availability window.  To enable this, tasks associated to the queue must execute a task completion call when finished to ensure Horae can continue execution.  Optionally sync queues may also define a backpressure URI, operation, payload AND definition.  If Horae starts to see the queue meet the backpressure definition the callback will be executed.",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "queue",
                            "description": "A queue object",
                            "dataType": "github.com.kieranbroadfoot.horae.types.Queue",
                            "type": "github.com.kieranbroadfoot.horae.types.Queue",
                            "format": "",
                            "allowMultiple": false,
                            "required": true,
                            "minimum": 0,
                            "maximum": 0
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "",
                            "responseModel": "github.com.kieranbroadfoot.horae.types.Queue"
                        },
                        {
                            "code": 400,
                            "message": "",
                            "responseModel": "github.com.kieranbroadfoot.horae.types.Error"
                        }
                    ],
                    "produces": [
                        "application/json"
                    ]
                }
            ]
        }
    ],
    "models": {
        "github.com.gocql.gocql.UUID": {
            "id": "github.com.gocql.gocql.UUID",
            "properties": null
        },
        "github.com.kieranbroadfoot.horae.types.Error": {
            "id": "github.com.kieranbroadfoot.horae.types.Error",
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "uint32",
                    "description": "The unique identifier of the returned error",
                    "items": {},
                    "format": ""
                },
                "message": {
                    "type": "string",
                    "description": "An error message",
                    "items": {},
                    "format": ""
                }
            }
        },
        "github.com.kieranbroadfoot.horae.types.Queue": {
            "id": "github.com.kieranbroadfoot.horae.types.Queue",
            "required": [
                "uuid"
            ],
            "properties": {
                "backpressureAction": {
                    "type": "github.com.gocql.gocql.UUID",
                    "description": "The unique identifier of an action to be called in the event that the backpressure definition is breached",
                    "items": {},
                    "format": ""
                },
                "backpressureDefinition": {
                    "type": "string",
                    "description": "For synchronous queues the backpressure definition defines the number of waiting task slots before the backpressure API endpoint is called.",
                    "items": {},
                    "format": ""
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the queue",
                    "items": {},
                    "format": ""
                },
                "paths": {
                    "type": "array",
                    "description": "Paths assigned to the queue.",
                    "items": {
                        "type": "string"
                    },
                    "format": ""
                },
                "queueType": {
                    "type": "string",
                    "description": "The type of queue: sync or async",
                    "items": {},
                    "format": ""
                },
                "shouldDrain": {
                    "type": "bool",
                    "description": "The expected behaviour of the queue when it is deleted. If true the queue will drain (and no longer accept new requests) before it is deleted.  Defaults to true",
                    "items": {},
                    "format": ""
                },
                "tags": {
                    "type": "array",
                    "description": "Tags assigned to the queue.",
                    "items": {
                        "type": "string"
                    },
                    "format": ""
                },
                "uuid": {
                    "type": "github.com.gocql.gocql.UUID",
                    "description": "The unique identifier of the queue",
                    "items": {},
                    "format": ""
                },
                "windowOfOperation": {
                    "type": "string",
                    "description": "The window of operation for the queue if defined as sync",
                    "items": {},
                    "format": ""
                }
            }
        },
        "github.com.kieranbroadfoot.horae.types.Success": {
            "id": "github.com.kieranbroadfoot.horae.types.Success",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Returned status message",
                    "items": {},
                    "format": ""
                }
            }
        }
    }
}